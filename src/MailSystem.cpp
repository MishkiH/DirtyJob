#include "../include/MailSystem.hpp"
#include "../include/Console.hpp"
#include "../include/components/HasInventory.hpp"
#include "../include/components/HasStats.hpp"
#include <iostream>
#include <sstream>
#include <algorithm>

MailSystem::MailSystem() {
}

void MailSystem::loadMails() {
    generateDefaultMails();
}

void MailSystem::generateDefaultMails() {
    mails.emplace_back(1, "–°—Ä–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏", 
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n\n"
        "–ú–æ–π –¥–∞–≤–Ω–∏–π –∑–Ω–∞–∫–æ–º—ã–π —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª –≤–∞—Å –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n"
        "–ù–∞ –≤–∏–¥–µ–æ—Ö–æ—Å—Ç–∏–Ω–≥–µ –Ω–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –∑–∞–ª–∏—Ç–∞ –∑–∞–ø–∏—Å—å –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –≥—Ä—É–ø–ø—ã DaiJadzu. –ß—ë—Ä—Ç–æ–≤ –¥—Ä–æ–Ω –∑–∞—Å–Ω—è–ª –æ–ø–ª–æ—à–Ω–æ—Å—Ç—å –±–∞—Å–∏—Å—Ç–∞ ‚Äì "
        "–Ω–µ—É–¥–∞—á–Ω—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫–∫–æ—Ä–¥–æ–≤, –∏—Å–ø–æ—Ä—Ç–∏–≤—à–∏–µ –≤—Å—ë –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –î–ª—è –º–∏—Ä–æ–≤–æ–π –ø—É–±–ª–∏–∫–∏ –ø–æ–¥–æ–±–Ω–∞—è –æ–ø–ª–æ—à–Ω–æ—Å—Ç—å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞.\n\n"
        "–ù—É–∂–Ω–æ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ –∑–∞–º–µ–Ω–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–≤—É–∫ –¥–æ —Å—Ç–∞—Ä—Ç–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏. –ú—ã —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É.\n\n"
        "–ü—Ä–µ–¥–æ–ø–ª–∞—Ç—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—ë–∫ –≤—ã—Å–ª–∞–ª–∏. –í—Ä–µ–º–µ–Ω–∏ –º–∞–ª–æ, –Ω–æ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å.\n\n"
        "‚Äî –ú–µ–Ω–µ–¥–∂–µ—Ä DaiJadzu Records",
        "anonymous@protonmail.com", 3);
    
    mails.emplace_back(2, "–ö–æ—Ä—Ä–µ–∫—Ü–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å.\n\n"
        "–û–±—Ä–∞—â–∞—é—Å—å –∫ –≤–∞–º –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –£ –Ω–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –¥–µ–ª–∏–∫–∞—Ç–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è —Å –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å—é.\n\n"
        "–ù—É–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–∞–≤–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å–ª—É–∂–±—ã. –ù–∏—á–µ–≥–æ –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ - –ø—Ä–æ—Å—Ç–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å "
        "–Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä –≤ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—â–µ–Ω–∞, –Ω–æ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞ —ç—Ç–æ –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞.\n\n"
        "–û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç–æ–π–Ω–∞—è. –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é.\n\n"
        "–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.\n\n"
        "‚Äî –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç",
        "consultant.fin@temp-mail.org", 5);
        
    mails.emplace_back(3, "–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.\n\n"
        "–Ø –ø–æ–ª–∏—Ç–∏–∫, –∏ –Ω–µ–¥–∞–≤–Ω–æ –≤ —Å–µ—Ç–∏ –ø–æ—è–≤–∏–ª–∏—Å—å –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–µ—Ä—å—ë–∑–Ω–æ –ø–æ–≤—Ä–µ–¥–∏—Ç—å –º–æ–µ–π –∫–∞—Ä—å–µ—Ä–µ. "
        "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —ç—Ç–æ –ø—Ä–∞–≤–¥–∞, –Ω–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ.\n\n"
        "–ù—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç—Ç–∏ –∑–∞–ø–∏—Å–∏ –∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏, –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã, "
        "–∞—Ä—Ö–∏–≤—ã —Å–∞–π—Ç–æ–≤. –¢–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n"
        "–ì–æ—Ç–æ–≤ –∑–∞–ø–ª–∞—Ç–∏—Ç—å –ª—é–±—É—é —Å—É–º–º—É. –≠—Ç–æ –≤–æ–ø—Ä–æ—Å –º–æ–µ–≥–æ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—É–¥—É—â–µ–≥–æ.\n\n"
        "P.S. –†–∞–±–æ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ.\n\n"
        "‚Äî –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ–µ –ª–∏—Ü–æ",
        "political.crisis@secure-mail.net", 8);
}

void MailSystem::showInterface() {
    std::cout << Console::colorize("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n", Console::CYAN);
    std::cout << Console::colorize("‚ïë                        –ü–û–ß–¢–û–í–´–ô –ö–õ–ò–ï–ù–¢                       ‚ïë\n", Console::CYAN);
    std::cout << Console::colorize("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n", Console::CYAN);
    
    displayMailList();
    
    std::cout << "\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n";
    std::cout << Console::colorize("/read {–Ω–æ–º–µ—Ä}", Console::GREEN) << " - –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–∏—Å—å–º–æ\n";
    std::cout << Console::colorize("/take {–Ω–æ–º–µ—Ä}", Console::GREEN) << " - –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑\n";
    std::cout << Console::colorize("/switch main", Console::GREEN) << " - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n";
}

void MailSystem::displayMailList() const {
    std::cout << "\n" << Console::colorize("üìß –í–•–û–î–Ø–©–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø:", Console::YELLOW) << "\n\n";
    
    for (const auto& mail : mails) {
        std::string status = mail.isRead ? "üìñ" : "üì©";
        std::cout << status << Console::colorize(" –ü–∏—Å—å–º–æ ‚Ññ" + std::to_string(mail.id), Console::WHITE);
        std::cout << Console::colorize(". –¢–µ–º–∞: ", Console::GRAY) << Console::colorize(mail.subject, Console::YELLOW) << "\n";
        std::cout << Console::colorize("   –ù–∞–≥—Ä–∞–¥–∞: ", Console::GREEN) << mail.reward << " ETH\n\n";
    }
}

void MailSystem::displayMail(int id) const {
    auto it = std::find_if(mails.begin(), mails.end(),
        [id](const Mail& mail) { return mail.id == id; });
    
    if (it == mails.end()) {
        std::cout << Console::colorize("–ü–∏—Å—å–º–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n", Console::RED);
        return;
    }
    
    const auto& mail = *it;
    
    std::cout << Console::colorize("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n", Console::BLUE);
    std::cout << Console::colorize("–û—Ç: ", Console::GRAY) << mail.sender << "\n";
    std::cout << Console::colorize("–¢–µ–º–∞: ", Console::GRAY) << Console::colorize(mail.subject, Console::YELLOW) << "\n";
    std::cout << Console::colorize("–ù–∞–≥—Ä–∞–¥–∞: ", Console::GRAY) << Console::colorize(std::to_string(mail.reward) + " ETH", Console::GREEN) << "\n";
    std::cout << Console::colorize("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n", Console::BLUE);
    std::cout << "\n" << mail.content << "\n\n";
}

bool MailSystem::processCommand(const std::string& command, Entity& player) {
    if (command.substr(0, 6) == "/read ") {
        int id = std::stoi(command.substr(6));
        displayMail(id);
        
        // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
        auto it = std::find_if(mails.begin(), mails.end(),
            [id](Mail& mail) { return mail.id == id; });
        if (it != mails.end()) {
            it->isRead = true;
        }
        return true;
    }
    
    if (command.substr(0, 6) == "/take ") {
        int id = std::stoi(command.substr(6));
        return takeMission(id, player);
    }
    
    return false;
}

bool MailSystem::takeMission(int id, Entity& player) {
    auto it = std::find_if(mails.begin(), mails.end(),
        [id](const Mail& mail) { return mail.id == id; });
    
    if (it == mails.end()) {
        std::cout << Console::colorize("–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n", Console::RED);
        return false;
    }
    
    const auto& mail = *it;
    
    std::cout << Console::colorize("‚ïê‚ïê‚ïê –ü–†–ò–ù–Ø–¢–ò–ï –ó–ê–î–ê–ù–ò–Ø ‚ïê‚ïê‚ïê\n", Console::YELLOW);
    std::cout << "–ó–∞–¥–∞–Ω–∏–µ: " << Console::colorize(mail.subject, Console::CYAN) << "\n";
    std::cout << "–ù–∞–≥—Ä–∞–¥–∞: " << Console::colorize(std::to_string(mail.reward) + " ETH", Console::GREEN) << "\n\n";
    
    std::cout << Console::colorize("üîß –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –≤–∑–ª–æ–º–∞...\n", Console::BLUE);
    std::cout << Console::colorize("‚ö° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BruteForcer v2.13...\n", Console::YELLOW);
    std::cout << Console::colorize("üîë –ü–æ–¥–±–æ—Ä –∫–ª—é—á–µ–π –¥–æ—Å—Ç—É–ø–∞...\n", Console::GREEN);
    
    bool success = true; // –í –¥–µ–º–æ –≤—Å–µ–≥–¥–∞ —É—Å–ø–µ—Ö
    
    if (success) {
        std::cout << Console::colorize("‚úÖ –í–ó–õ–û–ú –£–°–ü–ï–®–ï–ù!\n", Console::GREEN);
        std::cout << Console::colorize("üìä –î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã\n", Console::CYAN);
        std::cout << Console::colorize("üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...\n", Console::BLUE);
        
        //–Ω–∞–≥—Ä–∞–∂–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞
        auto inventory = player.getComponent<HasInventory>();
        if (inventory) {
            inventory->addEthereum(mail.reward);
            std::cout << Console::colorize("üí∞ –ü–æ–ª—É—á–µ–Ω–æ " + std::to_string(mail.reward) + " ETH\n", Console::GREEN);
        }
        
        //–≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–¥–∞–Ω–∏—è
        auto stats = player.getComponent<HasStats>();
        if (stats) {
            if (id == 1) { // –∑–∞–º–µ–Ω–∞ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏ - –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –±–µ–∑–æ–±–∏–¥–Ω–æ
                stats->modifyPragmatism(5);
                std::cout << Console::colorize("üìà –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º +5\n", Console::BLUE);
            } else if (id == 2) { // —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–∞—Ö–∏–Ω–∞—Ü–∏–∏
                stats->modifyPragmatism(10);
                stats->modifyCriticalThinking(-3);
                std::cout << Console::colorize("üìà –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º +10, –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ -3\n", Console::BLUE);
            } else if (id == 3) { //—É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø—Ä–æ–º–∞—Ç–∞
                stats->modifyPragmatism(15);
                stats->modifyRebelSpirit(8);
                stats->modifyCriticalThinking(-5);
                std::cout << Console::colorize("üìà –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º +15, –ë—É–Ω—Ç–∞—Ä—Å–∫–∏–π –¥—É—Ö +8, –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ -5\n", Console::BLUE);
            }
        }
        
        // —á–∏—Å—Ç–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
        mails.erase(it);
        
    } else {
        std::cout << Console::colorize("‚ùå –í–ó–õ–û–ú –ü–†–û–í–ê–õ–ï–ù!\n", Console::RED);
        std::cout << Console::colorize("üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞—Ç–∞–∫–∞\n", Console::RED);
        
        auto stats = player.getComponent<HasStats>();
        if (stats) {
            stats->modifyHealth(-20);
            std::cout << Console::colorize("üíî –ó–¥–æ—Ä–æ–≤—å–µ -20\n", Console::RED);
        }
    }
    
    return true;
}